const fs = require('fs'); 
const path = require('path');
const express = require('express');

const app = express(); 

app.use(express.json());

const PORT = 3000; 

const carrosPath = path.join(__dirname, 'carros.json'); 

const carrosData = fs.readFileSync(carrosPath, 'utf-8'); 
const carros = JSON.parse(carrosData); 

function saveDados() { 
fs.writeFileSync(carrosPath, JSON.stringify(carros, null, 4)); 
} 
function findCarroByName(name) { 
return carros.find(carro => carro.nome.toLowerCase() === name.toLowerCase()); 
} 
app.get('/add-car', (req, res) => { 
res.sendFile(path.join(__dirname, 'adicionar_carro.html')); 
}); 
app.post('/add-car', (req, resp) => { 
  const newCarro = req.body; 
 
  if (carros.find(car => car.nome.toLowerCase() == newCarro.nome.toLowerCase())) { 
    resp.send('<h1>Car already exists. Cannot add duplicates.</h1>'); 
    return; 
  } 
 
  carros.push(newCarro); 
  saveDados(); 
  resp.send('<h1>Car added successfully!</h1>'); 
}); 
 
app.get('/cars/classics', (req, res) => { 
  fs.readFile(path.join(__dirname, 'carros_classicos.json'), 'utf-8', (err, data) => { 
    if (err) { 
      res.status(500).send('Error reading classics cars file.'); 
      return; 
    } 
    res.json(JSON.parse(data)); 
  }); 
}); 
 
app.get('/cars/sports', (req, res) => { 
  fs.readFile(path.join(__dirname, 'carros_esportivos.json'), 'utf-8', (err, data) => { 
    if (err) { 
      res.status(500).send('Error reading sports cars file.'); 
      return; 
    } 
    res.json(JSON.parse(data)); 
  }); 
}); 
 
app.get('/cars/luxury', (req, res) => { 
  fs.readFile(path.join(__dirname, 'carros_luxo.json'), 'utf-8', (error, data) => { 
    if (error) { 
      res.status(404).send('Error reading luxury cars file.'); 
      return; 
    } 
res.send(JSON.parse(data)); 
}); 
}); 
app.get('/cars/:name', (req, res) => { 
const carName = req.params.name; 
const carroFound = findCarroByName(carName); 
if (carroFound) { 
res.json(carroFound); 
} else { 
res.status(404).send('<h1>Car not found.</h1>'); 
} 
}); 
app.listen(PORT, () => { 
console.log(`Server started at http://localhost:${port}`); 
});
